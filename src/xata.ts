// Generated by Xata Codegen 0.29.5. Please do not edit.
import { buildClient } from '@xata.io/client'
import type { BaseClientOptions, SchemaInference, XataRecord } from '@xata.io/client'

const tables = [
	{
		name: 'Notes',
		columns: [
			{ name: 'text', type: 'text' },
			{ name: 'embedding', type: 'vector', vector: { dimension: 768 } },
		],
	},
] as const

export type SchemaTables = typeof tables
export type InferredTypes = SchemaInference<SchemaTables>

export type Notes = InferredTypes['Notes']
export type NotesRecord = Notes & XataRecord

export type DatabaseSchema = {
	Notes: NotesRecord
}

const DatabaseClient = buildClient()

const defaultOptions = {
	databaseURL: 'https://Colum-Kelly-s-workspace-5vrokt.us-west-2.xata.sh/db/rag-example',
}

export class XataClient extends DatabaseClient<DatabaseSchema> {
	constructor(options?: BaseClientOptions) {
		super({ ...defaultOptions, ...options }, tables)
	}
}

let instance: XataClient | undefined = undefined

export const getXataClient = () => {
	if (instance) return instance

	instance = new XataClient()
	return instance
}
